name: Build, Test and Publish Docker

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

  # Triggered by ODM build (after docker push)
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        variant:
          - dockerfile: ./Dockerfile
            platforms: linux/amd64,linux/arm64
            tag: latest
          - dockerfile: ./Dockerfile.gpu
            platforms: linux/amd64
            tag: gpu
          - dockerfile: ./Dockerfile.gpu.intel
            platforms: linux/amd64
            tag: gpu.intel
    name: build ${{ matrix.variant.dockerfile }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Use the repository information of the checked-out code to format docker tags
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: |
            opendronemap/nodeodm
          # semver tag is only generated for the cpu version
          tags: |
            ${{ matrix.variant.tag == 'latest' && 'type=semver,pattern={{version}}' || '' }}
            type=raw,value=${{ matrix.variant.tag }}
      - name: Build and export Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.variant.dockerfile }}
          platforms: ${{ matrix.variant.platforms }}
          load: true
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}
      - name: Test Powercycle
        run: |
          docker run --rm opendronemap/nodeodm:${{ matrix.variant.tag }} --powercycle
      - name: Push cached Docker image
        uses: docker/build-push-action@v6
        with:
          file: ${{ matrix.variant.dockerfile }}
          platforms: ${{ matrix.variant.platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}